{"version":3,"sources":["logo.svg","components/PostBuyScreen/ComponentStyles.js","components/PostBuyScreen/FinalButtons.js","components/UserSatisfactionForm/FormStyles.js","img/dropIn.png","components/PostBuyScreen/RecieptModal.js","components/UserSatisfactionForm/SatisfactionForm.js","components/PostBuyScreen/FinalScreen.js","App.js","reportWebVitals.js","index.js"],"names":["LoadingDiv","styled","div","H1","h1","H2","h2","ModalContainer","FinalButtons","toggleRecieptModal","initializeFormView","style","background","color","onClick","SendButtonDiv","DropIn","img","DropInModal","FormBody","RecieptModal","openRecieptModal","recieptData","handleRecieptModal","recieptTotal","Number","price","deliveryCost","useState","confirmEmail","setConfirmEmail","confirmLoading","setConfirmLoading","visible","size","onCancel","footer","title","onConfirm","setTimeout","okButtonProps","loading","okText","cancelText","class","id","date","address","src","alt","product","quantity","description","currency","DropInImage","faceIcons","FrownOutlined","MehOutlined","SmileOutlined","surveyProps","question","icon","defaultValue","SatisfactionForm","toggleFormFinish","zero","one","two","surveyAnswer","setSurveyAnswer","formFinished","setFormFinished","useEffect","handleRateSubmit","a","map","data","index","className","character","HeartOutlined","allowHalf","onChange","e","handleRateAnswer","placement","disabled","moment","locale","Math","floor","random","format","loadIcon","LoadingOutlined","fontSize","spin","finishSmileIcon","FinalScreen","initialLoadingFinished","initiateCustomerForm","finalizeCustomerForm","finalScreeViews","setFinalScreenViews","setOpenRecieptModal","width","subTitle","extra","status","indicator","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c90ffccc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const LoadingDiv = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nexport const H1 = styled.h1`\r\n  color: #465a63;\r\n`;\r\n\r\nexport const H2 = styled.h2`\r\n  color: #52b366;\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nexport const ModalContainer = styled.div`\r\n  font-family: Roboto;\r\n  text-align: center;\r\n  font-size: 1.3rem;\r\n  h3 {\r\n    font-weight: bold;\r\n  }\r\n  .details {\r\n    font-size: 1.2rem;\r\n\r\n    .image {\r\n      width: 400px;\r\n      height: 400px;\r\n      display: flex;\r\n      margin-left: auto;\r\n    }\r\n    .subtotal {\r\n      font-weight: bold;\r\n    }\r\n  }\r\n  .price {\r\n    font-size: 1.1rem;\r\n  }\r\n\r\n  .total {\r\n    font-weight: bold;\r\n    font-size: 1.3rem;\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"antd\";\r\n\r\nfunction FinalButtons({ toggleRecieptModal, initializeFormView }) {\r\n  const handleViewReciept = () => {\r\n    toggleRecieptModal();\r\n  };\r\n\r\n  const handleInitializeFormView = () => {\r\n    initializeFormView();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        style={{ background: \"#465A63\", color: \"white\" }}\r\n        onClick={handleViewReciept}\r\n      >\r\n        {\" \"}\r\n        Ver recibo\r\n      </Button>\r\n\r\n      <Button\r\n        onClick={handleInitializeFormView}\r\n        style={{ background: \"#52c41a\", color: \"white\" }}\r\n      >\r\n        Finalizar proceso\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FinalButtons;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const SendButtonDiv = styled.div`\r\n  padding-top: 1.5rem;\r\n  padding-bottom: 1.5rem;\r\n`;\r\n\r\nexport const DropIn = styled.img`\r\n  height: 50%;\r\n  width: 500px;\r\n`;\r\n\r\nexport const DropInModal = styled.img`\r\n  height: 40%;\r\n  width: 300px;\r\n`;\r\n\r\nexport const FormBody = styled.div`\r\n  font-family: Roboto;\r\n  text-align: center;\r\n\r\n  h1 {\r\n    color: #11182b;\r\n    font-weight: bold;\r\n  }\r\n\r\n  h2 {\r\n    color: #11182b;\r\n  }\r\n\r\n  h3 {\r\n    font-weight: bold;\r\n    font-size: 1.4rem;\r\n    color: #11182b;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/dropIn.2202eba3.png\";","import React, { useState } from \"react\";\r\nimport { Modal, Button, Popconfirm } from \"antd\";\r\nimport { ModalContainer } from \"./ComponentStyles\";\r\nimport { DropInModal } from \"../UserSatisfactionForm/FormStyles\";\r\nimport DropInImage from \"../../img/dropIn.png\";\r\n\r\nfunction RecieptModal({ openRecieptModal, toggleRecieptModal, recieptData }) {\r\n  const handleRecieptModal = () => {\r\n    toggleRecieptModal();\r\n  };\r\n\r\n  let recieptTotal = Number(recieptData?.price + recieptData?.deliveryCost);\r\n\r\n  const [confirmEmail, setConfirmEmail] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const handleConfirmEmail = () => {\r\n    setConfirmEmail(true);\r\n  };\r\n\r\n  const handleCancelEmail = () => {\r\n    setConfirmEmail(false);\r\n  };\r\n\r\n  const handleSendEmail = () => {\r\n    setConfirmLoading(true);\r\n    setTimeout(() => {\r\n      setConfirmEmail(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      visible={openRecieptModal}\r\n      size=\"lg\"\r\n      onCancel={handleRecieptModal}\r\n      footer={[\r\n        <Popconfirm\r\n          title=\"¿Quieres que mandemos el recibo a tu correo?\"\r\n          visible={confirmEmail}\r\n          onConfirm={handleSendEmail}\r\n          onCancel={handleCancelEmail}\r\n          okButtonProps={{\r\n            loading: confirmLoading,\r\n            color: \"#465A63\",\r\n          }}\r\n          okText=\"Confirmar\"\r\n          cancelText=\"No\"\r\n        >\r\n          <Button\r\n            style={{ background: \"#465A63\", color: \"white\" }}\r\n            onClick={handleConfirmEmail}\r\n          >\r\n            Enviar por correo\r\n          </Button>\r\n        </Popconfirm>,\r\n        <Button\r\n          style={{ background: \"#52c41a\", color: \"white\" }}\r\n          key=\"ok\"\r\n          onClick={handleRecieptModal}\r\n        >\r\n          Regresar\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <ModalContainer>\r\n        <div class=\"order\">\r\n          <p>\r\n            {\" \"}\r\n            <b>Numero de orden :</b> {recieptData?.id}{\" \"}\r\n          </p>\r\n          <p>\r\n            {\" \"}\r\n            <b>Fecha de compra :</b> {recieptData?.date}{\" \"}\r\n          </p>\r\n          <p>\r\n            {\" \"}\r\n            <b>Dirección de envio :</b> {recieptData?.address}{\" \"}\r\n          </p>\r\n        </div>\r\n        <div class=\"details\">\r\n          <h3> Detalles de compra </h3>\r\n          <div class=\"product\">\r\n            <div class=\"image\">\r\n              <img\r\n                src=\"https://images.jumpseller.com/store/maskkingmexico/9520557/Lush_Ice.jpg?1634571170\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <div class=\"info\">\r\n              <h4>\r\n                {\" \"}\r\n                {recieptData?.product} - {recieptData?.quantity}{\" \"}\r\n              </h4>\r\n              <p> {recieptData?.description} </p>\r\n            </div>\r\n          </div>\r\n\r\n          <p class=\"subtotal\">\r\n            {\" \"}\r\n            $ {`${recieptData?.price} ${recieptData?.currency}`}{\" \"}\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"price\">\r\n          <p>\r\n            Subtotal: <span> ${recieptData?.price} </span>\r\n          </p>\r\n\r\n          <p>\r\n            {\" \"}\r\n            Envio:{\" \"}\r\n            <span>\r\n              {\" \"}\r\n              ${recieptData?.deliveryCost} {recieptData?.currency}\r\n            </span>{\" \"}\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <p class=\"total\">\r\n            Total:{\" \"}\r\n            <span>\r\n              {\" \"}\r\n              ${recieptTotal} {recieptData?.currency}{\" \"}\r\n            </span>\r\n          </p>\r\n        </div>\r\n        <DropInModal src={DropInImage} />\r\n      </ModalContainer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default RecieptModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Rate, Card, Button, Tooltip } from \"antd\";\r\nimport {\r\n  FrownOutlined,\r\n  MehOutlined,\r\n  SmileOutlined,\r\n  HeartOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { SendButtonDiv, FormBody, DropIn } from \"./FormStyles\";\r\nimport DropInImage from \"../../img/dropIn.png\";\r\n\r\nconst faceIcons = {\r\n  1: <FrownOutlined />,\r\n  2: <FrownOutlined />,\r\n  3: <MehOutlined />,\r\n  4: <SmileOutlined />,\r\n  5: <SmileOutlined />,\r\n};\r\n\r\nlet surveyProps = [\r\n  {\r\n    question: \"Mi pedido llego en buen estado\",\r\n    description: \"¿Llego bien tu pedido?\",\r\n    icon: faceIcons,\r\n    defaultValue: 0,\r\n  },\r\n  {\r\n    question: \"El trato del repartidor fue bueno\",\r\n    description: \"Califica a tu repartidor\",\r\n    icon: null,\r\n    defaultValue: 0,\r\n  },\r\n  {\r\n    question: \"Volveria a ordenar por Dropin\",\r\n    description: \"¡Eres valioso para nosotros!\",\r\n    icon: faceIcons,\r\n    defaultValue: 0,\r\n  },\r\n];\r\n\r\nfunction SatisfactionForm({ toggleFormFinish }) {\r\n  const [surveyAnswer, setSurveyAnswer] = useState({\r\n    zero: null,\r\n    one: null,\r\n    two: null,\r\n  });\r\n\r\n  const handleRateAnswer = (e, index) => {\r\n    if (index === 0) {\r\n      setSurveyAnswer({\r\n        zero: e,\r\n        one: surveyAnswer.one,\r\n        two: surveyAnswer.two,\r\n      });\r\n    } else if (index === 1) {\r\n      setSurveyAnswer({\r\n        zero: surveyAnswer.zero,\r\n        one: e,\r\n        two: surveyAnswer.two,\r\n      });\r\n    } else {\r\n      setSurveyAnswer({\r\n        zero: surveyAnswer.zero,\r\n        one: surveyAnswer.one,\r\n        two: e,\r\n      });\r\n    }\r\n  };\r\n\r\n  const [formFinished, setFormFinished] = useState(false);\r\n  //Button validation\r\n  useEffect(() => {\r\n    if (surveyAnswer.zero && surveyAnswer.one && surveyAnswer.two)\r\n      setFormFinished(true);\r\n    else setFormFinished(false);\r\n  }, [surveyAnswer]);\r\n\r\n  const handleRateSubmit = async () => {\r\n    // TODO: Incorporar lógica de post de respuesta\r\n    //try + catch y manejar todo.\r\n    toggleFormFinish();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DropIn src={DropInImage} />\r\n      <FormBody>\r\n        <h1>En Dropin valoramos mucho tu opinion.</h1>\r\n        <h2>\r\n          Ayudanos a brindarte un mejor servicio conestando esta breve encuesta.\r\n          <span>¡Por favor!</span>\r\n        </h2>\r\n        <div>\r\n          {surveyProps.map((data, index) => {\r\n            return (\r\n              <div className=\"pb-2\">\r\n                <Card>\r\n                  <h3>{data?.question}</h3>\r\n                  <h4>{data?.description}</h4>\r\n                  <Rate\r\n                    defaultValue={0}\r\n                    style={data.icon ? { color: \"green\" } : { color: \"red\" }}\r\n                    character={\r\n                      data.icon ? (\r\n                        ({ index }) => data.icon[index + 1]\r\n                      ) : (\r\n                        <HeartOutlined />\r\n                      )\r\n                    }\r\n                    allowHalf\r\n                    onChange={(e) => handleRateAnswer(e, index)}\r\n                  />\r\n                </Card>\r\n              </div>\r\n            );\r\n          })}\r\n          <SendButtonDiv>\r\n            <Tooltip\r\n              placement=\"top\"\r\n              title={!formFinished ? \"Por favor contesta la encuesta.\" : null}\r\n            >\r\n              <Button\r\n                disabled={!formFinished ? true : false}\r\n                onClick={handleRateSubmit}\r\n                style={\r\n                  !formFinished\r\n                    ? {\r\n                        background: \"#11182b\",\r\n                        color: \"white\",\r\n                      }\r\n                    : { background: \"#8ed49f\", color: \"white\" }\r\n                }\r\n              >\r\n                {\" \"}\r\n                Enviar{\" \"}\r\n              </Button>\r\n            </Tooltip>\r\n          </SendButtonDiv>\r\n        </div>\r\n      </FormBody>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SatisfactionForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Spin, Card, Result } from \"antd\";\r\nimport { LoadingOutlined, SmileOutlined } from \"@ant-design/icons\";\r\nimport { LoadingDiv, H1, H2 } from \"./ComponentStyles\";\r\nimport FinalButtons from \"./FinalButtons\";\r\nimport RecieptModal from \"./RecieptModal\";\r\nimport SatisfactionForm from \"../UserSatisfactionForm/SatisfactionForm\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/es\";\r\nmoment.locale(\"es\");\r\n\r\nconst recieptData = {\r\n  id: Math.floor(Math.random() * 5467),\r\n  date: moment().format(\"LLL\"),\r\n  address: \"Monte Pinocho 132, Tlaxcala\",\r\n  product: \"Masking\",\r\n  description: \"Sandia, 5% nicotina\",\r\n  quantity: 1,\r\n  price: 200,\r\n  currency: \"MXN\",\r\n  deliveryCost: 60,\r\n};\r\n\r\nconst loadIcon = (\r\n  <LoadingOutlined style={{ fontSize: \"10rem\", color: \"#52B366\" }} spin />\r\n);\r\n\r\nconst finishSmileIcon = (\r\n  <SmileOutlined style={{ fontSize: \"7rem\", color: \"#52B366\" }} />\r\n);\r\n\r\nfunction FinalScreen() {\r\n  const [finalScreeViews, setFinalScreenViews] = useState({\r\n    initialLoadingFinished: false,\r\n    initiateCustomerForm: false,\r\n    finalizeCustomerForm: false,\r\n  });\r\n\r\n  const [openRecieptModal, setOpenRecieptModal] = useState(false);\r\n\r\n  const toggleRecieptModal = () => {\r\n    setOpenRecieptModal(!openRecieptModal);\r\n  };\r\n\r\n  const initializeFormView = () => {\r\n    setFinalScreenViews({\r\n      initialLoadingFinished: true,\r\n      initiateCustomerForm: true,\r\n      finalizeCustomerForm: false,\r\n    });\r\n  };\r\n\r\n  const toggleFormFinish = () => {\r\n    setFinalScreenViews({\r\n      initialLoadingFinished: true,\r\n      initiateCustomerForm: true,\r\n      finalizeCustomerForm: true,\r\n    });\r\n  };\r\n\r\n  const handleScreenRestart = () => {\r\n    setFinalScreenViews({\r\n      initialLoadingFinished: false,\r\n      initiateCustomerForm: false,\r\n      finalizeCustomerForm: false,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!finalScreeViews?.initialLoadingFinished) {\r\n      setTimeout(() => {\r\n        setFinalScreenViews({\r\n          initialLoadingFinished: true,\r\n          initiateCustomerForm: false,\r\n          finalizeCustomerForm: false,\r\n        });\r\n      }, 3000);\r\n    } else return;\r\n  }, [finalScreeViews]);\r\n\r\n  return (\r\n    <>\r\n      <RecieptModal\r\n        openRecieptModal={openRecieptModal}\r\n        toggleRecieptModal={toggleRecieptModal}\r\n        recieptData={recieptData}\r\n      />\r\n      <LoadingDiv>\r\n        {!finalScreeViews?.initiateCustomerForm ? (\r\n          <Card\r\n            title={\r\n              !finalScreeViews?.initialLoadingFinished\r\n                ? \"Estamos procesando tu pedido...\"\r\n                : null\r\n            }\r\n            style={{ width: \"auto\" }}\r\n          >\r\n            {!finalScreeViews?.initialLoadingFinished ? (\r\n              <Spin indicator={loadIcon} />\r\n            ) : (\r\n              <>\r\n                <H1>Estado de compra:</H1>\r\n                <H2>¡Exitoso!</H2>\r\n                <Result\r\n                  status=\"success\"\r\n                  title=\"¡Tu pedido ha sido completado! Gracias por la confianza. \"\r\n                  subTitle={`Numero de orden: ${recieptData?.id}`}\r\n                  extra={\r\n                    <FinalButtons\r\n                      toggleRecieptModal={toggleRecieptModal}\r\n                      initializeFormView={initializeFormView}\r\n                    />\r\n                  }\r\n                />\r\n              </>\r\n            )}\r\n          </Card>\r\n        ) : (\r\n          <Card style={{ width: \"auto\" }}>\r\n            {!finalScreeViews?.finalizeCustomerForm ? (\r\n              <SatisfactionForm toggleFormFinish={toggleFormFinish} />\r\n            ) : (\r\n              <>\r\n                <Result\r\n                  icon={finishSmileIcon}\r\n                  title=\"¡Muchas gracias por tu tiempo!\"\r\n                  subTitle=\"Esperamos seguir realizando tus entregas.\"\r\n                  extra={\r\n                    <Button\r\n                      style={{ background: \"#465A63\", color: \"white\" }}\r\n                      onClick={handleScreenRestart}\r\n                    >\r\n                      Reiniciar\r\n                    </Button>\r\n                  }\r\n                />\r\n              </>\r\n            )}\r\n          </Card>\r\n        )}\r\n      </LoadingDiv>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FinalScreen;\r\n","import logo from \"./logo.svg\";\nimport React from \"react\";\nimport \"./App.css\";\nimport FinalScreen from \"./components/PostBuyScreen/FinalScreen\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FinalScreen />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}